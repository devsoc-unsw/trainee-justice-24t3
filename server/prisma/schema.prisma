// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  zid         String   @id
  description String?
  degree      String?
  year        Int?
  verified    Boolean
  admin       Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  reviews Review[]
}

model Society {
  id            String   @id @default(uuid())
  name          String   @unique
  description   String
  icon          String   @default("https://kansai-resilience-forum.jp/wp-content/uploads/2019/02/IAFOR-Blank-Avatar-Image-1.jpg")
  facebookUrl   String?
  discordUrl    String?
  emailUrl      String?
  averageRating Float    @default(0)
  totalReviews  Int      @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  reviews Review[]
  tags    TagsOnSocieties[]
}

model Review {
  id        String   @id @default(uuid())
  title     String?
  content   String?
  rating    Int
  anonymous Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  user      User            @relation(fields: [userId], references: [zid])
  societyId String
  society   Society         @relation(fields: [societyId], references: [id])
  tags      TagsOnReviews[]
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  societies TagsOnSocieties[]
  reviews   TagsOnReviews[]
}

model TagsOnSocieties {
  society   Society @relation(fields: [societyId], references: [id])
  societyId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String

  @@id([societyId, tagId])
}

model TagsOnReviews {
  review   Review @relation(fields: [reviewId], references: [id])
  reviewId String
  tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    String

  @@id([reviewId, tagId])
}
